{"version":3,"sources":["components/cell.module.scss","components/pointer.module.scss","components/pointer.tsx","components/cell.tsx","buttons/button.tsx","containers/gameBoard.tsx","App.tsx","index.tsx","containers/gameBoard.module.scss","buttons/button.module.scss"],"names":["module","exports","pointer","props","className","styles","icon","style","transform","direction","Cell","hasPointer","cell","Button","onClick","clicked","button","button__orange","children","GameBoard","rows","useState","columns","setDirection","x","setX","y","setY","currentNumber","setCurrentNumber","Array","fill","currentcells","setCurrentCells","useEffect","updateCells","cells","map","Math","random","index","Board","styled","div","gameBoard","id","gameBoard__buttons","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,kMCWVC,EATkC,SAACC,GAChD,OACE,cAAC,IAAD,CACEC,UAAWC,IAAOC,KAClBC,MAAO,CAAEC,UAAU,UAAD,OAAYL,EAAMM,UAAlB,YCITC,EARoD,SAACP,GAClE,IAAID,EAAU,KAId,OAHIC,EAAMQ,aACRT,EAAU,cAAC,EAAD,CAASO,UAAWN,EAAMM,aAE/B,qBAAKL,UAAWC,IAAOO,KAAvB,SAA8BV,K,gBCKxBW,EAXoC,SAACV,GAClD,OACE,wBACEW,QAASX,EAAMY,QACfX,UAAS,UAAKC,IAAOW,OAAZ,YAAsBX,IAAOY,gBAFxC,SAIGd,EAAMe,YCkGEC,EAlGG,WAChB,IAAMC,EAAOC,mBAAiB,IACxBC,EAAUD,mBAAiB,IAEjC,EAAkCA,mBAAiB,IAAnD,mBAAOZ,EAAP,KAAkBc,EAAlB,KACA,EAAkBF,mBAAiB,GAAnC,mBAAOG,EAAP,KAAUC,EAAV,KACA,EAAkBJ,mBAAiB,GAAnC,mBAAOK,EAAP,KAAUC,EAAV,KACA,EAA0CN,mBAAS,GAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAwCR,mBACtC,IAAIS,MAAMV,EAAK,GAAKE,EAAQ,IAAIS,MAAK,IADvC,mBAAOC,EAAP,KAAqBC,EAArB,KAIAC,qBAAU,WACRC,EAAY,KACX,IAEH,IAAIC,EACJA,EAAQJ,EAAaK,KAAI,SAACzB,GACxB,OACE,cAAC,EAAD,CAAMH,UAAWA,EAAWE,WAAYC,GAA2B,EAAhB0B,KAAKC,aAK5D,IAiDMJ,EAAc,SAACK,GACnB,IAAIJ,EAAQ,IAAIN,MAAMV,EAAK,GAAKE,EAAQ,IAAIS,MAAK,GACjDK,EAAMI,IAAS,EACfP,EAAgBG,IAGZK,EAAQC,IAAOC,IAAV,8NAEuBrB,EAAQ,GACXF,EAAK,IAKpC,OACE,sBAAKhB,UAAWC,IAAOuC,UAAvB,UACE,cAACH,EAAD,CAAOI,GAAI,YAAX,SAAyBT,IACzB,sBAAKhC,UAAWC,IAAOyC,mBAAvB,UACE,cAAC,EAAD,CAAQ/B,QAvBI,WAChBQ,EAAa,KAsBT,wBACA,cAAC,EAAD,CAAQR,QApEO,WACnB,OAAQN,GACN,KAAK,GACCe,EAAIF,EAAQ,IACda,EAAYP,GACZH,EAAKD,EAAI,GACTK,EAAiBD,EAAgB,IACxBJ,IAAMF,EAAQ,IACvBC,EAAad,EAAY,IAE3B,MACF,KAAK,IACCiB,EAAIN,EAAK,IACXe,EAAYP,EAAgBN,EAAQ,GAAK,GACzCK,EAAKD,EAAI,GACTG,EAAiBD,EAAgBN,EAAQ,KAChCI,IAAMN,EAAK,IACpBG,EAAad,EAAY,IAE3B,MAEF,KAAK,IACCe,EAAI,GACNW,EAAYP,EAAgB,GAC5BH,EAAKD,EAAI,GACTK,EAAiBD,EAAgB,IAClB,IAANJ,GACTD,EAAa,GAEf,MAEF,KAAK,EACCG,EAAI,GACNS,EAAYP,EAAgBN,EAAQ,GAAK,GACzCK,EAAKD,EAAI,GACTG,EAAiBD,EAAgBN,EAAQ,KAC1B,IAANI,GACTH,EAAa,MA+Bf,iCC9FOwB,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BpD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,mBAAqB,wC,kBCAhFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,kC","file":"static/js/main.ad8d774c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"cell_cell__hofCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"pointer_icon__2z3It\"};","import { FaHandPointer } from \"react-icons/fa\";\nimport styles from \"./pointer.module.scss\";\n\nconst pointer: React.FC<{ direction: number }> = (props) => {\n  return (\n    <FaHandPointer\n      className={styles.icon}\n      style={{ transform: `rotate(${props.direction}deg)` }}\n    />\n  );\n};\n\nexport default pointer;\n","import styles from \"./cell.module.scss\";\nimport Pointer from \"./pointer\";\n\nconst Cell: React.FC<{ hasPointer: boolean; direction: number }> = (props) => {\n  let pointer = null;\n  if (props.hasPointer) {\n    pointer = <Pointer direction={props.direction} />;\n  }\n  return <div className={styles.cell}>{pointer}</div>;\n};\n\nexport default Cell;\n","import styles from \"./button.module.scss\";\n\nconst Button: React.FC<{ clicked?: () => void }> = (props) => {\n  return (\n    <button\n      onClick={props.clicked}\n      className={`${styles.button} ${styles.button__orange}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport styles from \"./gameBoard.module.scss\";\n\nimport Cell from \"../components/cell\";\nimport Button from \"../buttons/button\";\n\nconst GameBoard = () => {\n  const rows = useState<number>(10); // Dynamic rows ;)\n  const columns = useState<number>(10); // Dynamic columns ;) but CSS was optimized to take 10 col at max so kindly don't break it:))\n\n  const [direction, setDirection] = useState<number>(90);\n  const [x, setX] = useState<number>(1);\n  const [y, setY] = useState<number>(1);\n  const [currentNumber, setCurrentNumber] = useState(1);\n  const [currentcells, setCurrentCells] = useState(\n    new Array(rows[0] * columns[0]).fill(false)\n  );\n\n  useEffect(() => {\n    updateCells(0);\n  }, []);\n\n  let cells = [];\n  cells = currentcells.map((cell) => {\n    return (\n      <Cell direction={direction} hasPointer={cell} key={Math.random() * 5} />\n    );\n  });\n\n  // Moving Forward Functionality\n  const clickedRight = () => {\n    switch (direction) {\n      case 90:\n        if (x < columns[0]) {\n          updateCells(currentNumber);\n          setX(x + 1);\n          setCurrentNumber(currentNumber + 1);\n        } else if (x === columns[0]) {\n          setDirection(direction + 90);\n        }\n        break;\n      case 180:\n        if (y < rows[0]) {\n          updateCells(currentNumber + columns[0] - 1);\n          setY(y + 1);\n          setCurrentNumber(currentNumber + columns[0]);\n        } else if (y === rows[0]) {\n          setDirection(direction + 90);\n        }\n        break;\n\n      case 270:\n        if (x > 1) {\n          updateCells(currentNumber - 2); // I have no idea why it worked with -2 and failed with -1 :DDDD\n          setX(x - 1);\n          setCurrentNumber(currentNumber - 1);\n        } else if (x === 1) {\n          setDirection(0);\n        }\n        break;\n\n      case 0:\n        if (y > 1) {\n          updateCells(currentNumber - columns[0] - 1);\n          setY(y - 1);\n          setCurrentNumber(currentNumber - columns[0]);\n        } else if (y === 1) {\n          setDirection(90);\n        }\n        break;\n    }\n  };\n\n  // Turning Right Functionality\n  const turnRight = () => {\n    setDirection(90);\n  };\n\n  // Helper Function: Updating active cell\n  const updateCells = (index: number) => {\n    let cells = new Array(rows[0] * columns[0]).fill(false);\n    cells[index] = true;\n    setCurrentCells(cells);\n  };\n\n  const Board = styled.div`\n    display: grid;\n    grid-template-columns: repeat(${columns[0]}, var(--cell-size));\n    grid-template-rows: repeat(${rows[0]}, var(--cell-size));\n    justify-content: center;\n    align-content: center;\n  `;\n\n  return (\n    <div className={styles.gameBoard}>\n      <Board id={\"container\"}>{cells}</Board>\n      <div className={styles.gameBoard__buttons}>\n        <Button clicked={turnRight}>Turn right</Button>\n        <Button clicked={clickedRight}>Move Forward</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameBoard;\n","import GameBoard from \"./containers/gameBoard\";\n\nfunction App() {\n  return <GameBoard />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameBoard\":\"gameBoard_gameBoard__1wdt_\",\"gameBoard__buttons\":\"gameBoard_gameBoard__buttons__1mu_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2UJTY\",\"button__orange\":\"button_button__orange__1pAo0\"};"],"sourceRoot":""}